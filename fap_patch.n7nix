--- old/src/fap.c	2013-01-28 06:21:52.319038359 -0800
+++ new/src/fap.c	2013-04-15 12:18:57.470216085 -0700
@@ -164,9 +164,10 @@
 	}

 	/* Save the original packet. */
-	result->orig_packet = malloc(input_len);
+	result->orig_packet = malloc(input_len+1);
 	result->orig_packet_len = input_len;
 	memcpy(result->orig_packet, input, input_len);
+        *(result->orig_packet+input_len) = '\0';

 	/* Find the end of header checking for NULL bytes while doing it. */
 	splitpos = 0;
@@ -450,6 +451,9 @@
 	else if ( typechar == '}' )
 	{
 		/* Come here to avoid the "when all else fails" option. */
+		result->type = malloc(sizeof(fap_packet_type_t));
+		if ( !result->type ) return result;
+		*result->type = fapTHIRD_PARTY;
 	}
 	/* When all else fails, try to look for a !-position that can occur
 	   anywhere within the 40 first characters according to the spec. */
@@ -1119,7 +1123,7 @@
 				/* Yes, lets do some checks. */
 				if ( header_len < 14 || header_len % 7 != 0 )
 				{
-					sprintf(output, "Invalid header lenght (%d).", header_len);
+					sprintf(output, "Invalid header length (%d).", header_len);
 					output_len = strlen(output)+1;
 					retval = 0;
 					break;
@@ -1156,16 +1160,14 @@
 				else if ( header_len == 14 )
 				{
 					/* We have a source callsign, copy it to the final frame directly. */
-					sprintf(output, "%s>%s", checked_call, dst_callsign);
-					output_len = strlen(checked_call) + 1 + strlen(dst_callsign);
+					output_len = sprintf(output, "%s>%s", checked_call, dst_callsign);
 					free(dst_callsign);
 					free(checked_call);
 				}
 				else if ( header_len > 14 )
 				{
 					/* We're at path part, save the call. */
-					sprintf(output+output_len, "%s", checked_call);
-					output_len += strlen(checked_call);
+					output_len += sprintf(output+output_len, "%s", checked_call);
 					free(checked_call);
 					/* Get the has-been-repeated flag. */
 					if ( charri & 0x80 )

--- old/src/helpers.c	2011-05-22 09:39:51.000000000 -0700
+++ new/src/helpers.c	2013-04-15 12:11:46.188194655 -0700
@@ -620,7 +620,7 @@
 	/* If there's something left, create working copy of it. */
 	if ( (len = input_len - 8) > 0 )
 	{
-		rest = malloc(len);
+		rest = malloc(len+1);
 		memcpy(rest, input+8, len);
 	}
 	else
@@ -2502,7 +2502,7 @@
 	}
 	else
 	{
-		packet->status = malloc(input_len);
+		packet->status = malloc(input_len + 1);
 		if ( !packet->status ) return 0;
 		memcpy(packet->status, input, input_len);
 		packet->status_len = input_len;

--- old/src/fap.h	2011-05-20 23:40:10.000000000 -0700
+++ new/src/fap.h	2013-04-15 12:14:04.882654534 -0700
@@ -158,6 +158,7 @@
 	fapTELEMETRY,
 	fapTELEMETRY_MESSAGE,
 	fapDX_SPOT,
+        fapTHIRD_PARTY,

 	fapEXPERIMENTAL
 } fap_packet_type_t;
